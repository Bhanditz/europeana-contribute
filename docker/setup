#!/usr/bin/env ruby
# frozen_string_literal: true

require 'fileutils'
require 'pathname'
require 'securerandom'
require 'yaml'

# Path to Minio object storage root
minio_dir = Pathname.new(File.expand_path('../../tmp/minio', __FILE__))

# Generate Minio access key and secret
s3_access_key_id = SecureRandom.hex(20)
s3_secret_access_key = SecureRandom.hex(40)

%w(development test).each do |rails_env|
  # Create Minio bucket directories for development and test env's
  s3_bucket = "europeana-stories-#{rails_env}"
  FileUtils.mkdir_p(File.join(minio_dir, s3_bucket))

  # Set S3 env vars for development and test env's
  File.open(File.expand_path("../../.env.#{rails_env}", __FILE__), 'a') do |dotenv_file|
    dotenv_file.puts 'S3_REGION=eu-east-1'
    dotenv_file.puts "S3_ACCESS_KEY_ID=#{s3_access_key_id}"
    dotenv_file.puts "S3_SECRET_ACCESS_KEY=#{s3_secret_access_key}"
    dotenv_file.puts 'S3_ENDPOINT=http://localhost:3001'
    dotenv_file.puts "S3_BUCKET=europeana-stories-#{rails_env}"
    dotenv_file.puts 'S3_HOST=localhost'
    dotenv_file.puts 'S3_PATH_STYLE=1'
  end
end

# Generate local docker-compose config
docker_config = YAML.load_file(File.expand_path('../docker-compose.yml', __FILE__))
docker_config['services']['minio']['volumes'].map! do |volume|
  volume.sub(/\A\.\./, '.')
end
docker_config['services']['minio']['environment'] ||= {}
docker_config['services']['minio']['environment']['MINIO_ACCESS_KEY'] = s3_access_key_id
docker_config['services']['minio']['environment']['MINIO_SECRET_KEY'] = s3_secret_access_key
File.write(File.expand_path('../../docker-compose.yml', __FILE__), docker_config.to_yaml)

# Copy mongoid config into app
FileUtils.cp(File.expand_path('../config/mongoid.yml', __FILE__),
             File.expand_path('../../config/mongoid.yml', __FILE__))
